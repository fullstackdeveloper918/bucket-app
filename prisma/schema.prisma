// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL") // Use MySQL connection string
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Review {
  id          String   @id @default(uuid()) // Unique identifier for the review
  shopDomain  String?
  productId   String? // Reference to the product being reviewed
  userName    String?
  userEmail   String? // Optional: Reference to the user submitting the review (can be null for guest reviews)
  rating      Float? // The rating given by the user (e.g., 4.3)
  comment     String? // Optional: The review comment
  createdAt   DateTime? @default(now()) // Timestamp when the review was created
  updatedAt   DateTime? @updatedAt // Timestamp when the review was last updated
  isPublic    Boolean?  @default(true) // Indicates if the review is publicly visible  
  images      Images[] // A review can have many images (array of Images)
  productName String? // This field cannot be NULL
  position    String?
  section     String?
  text        String?
  textSize    String?
  textColor   String?
  starsColor  String?
  barsRatingColor String?
  addReviewBtnText String?
  buttonColor    String?
  verifiedPurchase  String?
  backgroundColor   String?
  backgroundShadow  String?

}

model Images {
  id        Int       @id @default(autoincrement())
  reviewId  String // Foreign key to the Review model
  url       String? // The URL of the image
  createdAt DateTime  @default(now()) // Timestamp when the image was created
  deletedAt DateTime? // Timestamp when the image was deleted (optional)

  review Review @relation(fields: [reviewId], references: [id]) // Relationship with the Review model
}

model Bundle {
  id                    Int     @id @default(autoincrement())
  isActive              Int     @default(1)
  name                  String?
  displayLocation       String?
  method                String?
  chooseAmount          Float?
  totalAmount           Float?
  domainName            String?
  products              Json?
  position              String?
  section               String?
  title_section         Json?
  title                 Json?
  product               Json?
  bundle_cost           Json?
  call_to_action_button Json?
  text_below_cta        Json?
  backgroud             Json?
}

model Sales {
  id         Int      @id @default(autoincrement())
  bundleId   Int
  total      Float
  domainName String
  bundleType String
  createdAt  DateTime @default(now()) // Timestamp when the review was created
  updatedAt  DateTime @updatedAt // Timestamp when the review was last updated
}

model Cats {
  id       Int    @id @default(autoincrement())
  prod_id  Int
  cat_name String
  cat_desc String
}

model LaunchBundle {
  id                      Int      @id @default(autoincrement())
  email_send_at           String
  subject                 String
  five_star               String?
  four_star               String?
  three_star              String?
  two_star                String?
  one_star                String?
  button_color            String
  button_text             String
  footer_unsubscribe_text String
  button_unsubscribe_text String
  createdAt               DateTime @default(now()) // Timestamp when the review was created
  updatedAt               DateTime @updatedAt // Timestamp when the review was last updated
}

model Category {
  id         Int      @id @default(autoincrement())
  cat_name   String
  product_id Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Bogoxy {
  id                    Int      @id @default(autoincrement())
  isActive              Int      @default(1)
  bundle_name           String?
  discount_id           String?
  buysx                 Json?
  gety                  Json?
  where_to_display      String?
  discount_method       String?
  discount_info         Json?
  amount                Float?   @default(0)
  domainName            String?
  position              String?
  section               String?
  title_section         Json?
  title                 Json?
  product               Json?
  bundle_cost           Json?
  call_to_action_button Json?
  text_below_cta        Json?
  backgroud             Json?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model volumeDiscount {
  id                             Int      @id @default(autoincrement())
  bundle_name                    String?
  product_id                     Int?
  position                       String?
  call_to_action_button          Json?
  section                        String?
  discount_id                    String?
  discount_info                  Json?
  select_product_volume_discount String?
  product_details                Json?
  product_all                    Int?
  discount_method                String?
  tier                           Json?
  above_title_section            Json?
  text_below_cta                 Json?
  title                          Json?
  Tiers                          Json?
  background                     Json?
  isActive                       Int      @default(1)
  domainName                     String
  createdAt                      DateTime @default(now())
  updatedAt                      DateTime @updatedAt
}


model VisitorAction {
  id         String   @id @default(uuid())
  domain     String   // The domain where the visitor took action  
  country    String?  // Visitor's country  
  ipAddress  String?  // (Optional) IP for tracking  
  videoURL   String?  // URL of the recorded video  
  message    String?  // Any text message from the visitor
  userName   String?
  actionNumber Int?  
  createdAt  DateTime @default(now())
}
